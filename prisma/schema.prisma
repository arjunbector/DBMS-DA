datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Product {
  product_id  Int         @id @default(autoincrement())
  name        String
  description String?
  price       Decimal
  category_id Int
  supplier_id Int
  category    Category    @relation(fields: [category_id], references: [category_id], onDelete: Cascade)
  supplier    Supplier    @relation(fields: [supplier_id], references: [supplier_id], onDelete: Cascade)
  inventory   Inventory?
  OrderItem   OrderItem[]
}

model Category {
  category_id Int       @id @default(autoincrement())
  name        String
  description String?
  Product     Product[]
}

model Supplier {
  supplier_id        Int       @id @default(autoincrement())
  name               String
  contactInformation String?
  address            String?
  Product            Product[]
}

model Inventory {
  inventory_id Int      @id @default(autoincrement())
  quantity     Int
  lastUpdated  DateTime @updatedAt
  product_id   Int      @unique
  product      Product  @relation(fields: [product_id], references: [product_id], onDelete: Cascade)
}

model Order {
  order_id    Int         @id @default(autoincrement())
  orderDate   DateTime    @default(now())
  totalAmount Decimal
  status      String
  OrderItem   OrderItem[]
}

model OrderItem {
  order_item_id Int     @id @default(autoincrement())
  quantity      Int
  price         Decimal
  order_id      Int
  product_id    Int
  order         Order   @relation(fields: [order_id], references: [order_id], onDelete: Cascade)
  product       Product @relation(fields: [product_id], references: [product_id], onDelete: Cascade)

  @@unique([order_id, product_id]) // Ensures each product can only appear once per order
}