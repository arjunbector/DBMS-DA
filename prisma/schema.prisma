datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Product {
  productId   String      @id @default(uuid())
  name        String
  description String?
  price       Decimal
  categoryId  String
  supplierId  String
  category    Category    @relation(fields: [categoryId], references: [categoryId], onDelete: Cascade)
  supplier    Supplier    @relation(fields: [supplierId], references: [supplierId], onDelete: Cascade)
  inventory   Inventory?
  OrderItem   OrderItem[]
}

model Category {
  categoryId  String    @id @default(uuid())
  name        String    @unique
  description String?
  Product     Product[]
}

model Supplier {
  supplierId         String    @id @default(uuid())
  name               String    @unique
  contactInformation String?
  address            String?
  Product            Product[]
}

model Inventory {
  inventoryId String   @id @default(uuid())
  quantity    Int
  lastUpdated DateTime @updatedAt
  productId   String   @unique
  product     Product  @relation(fields: [productId], references: [productId], onDelete: Cascade)
}

model Order {
  orderId     String      @id @default(uuid())
  orderDate   DateTime    @default(now())
  totalAmount Decimal
  status      String      @default("PENDING")
  OrderItem   OrderItem[]
}

model OrderItem {
  orderItemId String  @id @default(uuid())
  quantity    Int
  price       Decimal
  orderId     String
  productId   String
  order       Order   @relation(fields: [orderId], references: [orderId], onDelete: Cascade)
  product     Product @relation(fields: [productId], references: [productId], onDelete: Cascade)

  @@unique([orderId, productId]) // Ensures each product can only appear once per order
}
